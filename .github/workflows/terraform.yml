name: Terraform CI/CD

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger
    inputs:
      environment:
        description: 'Environment (dev, uat, prod)'
        required: true
        default: 'dev'
      action:
        description: 'Action (plan, apply, destroy)'
        required: true
        default: 'plan'

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: production  # Gates apply/destroy with approval; skip for plan
    defaults:
      run:
        shell: bash
        working-directory: .  # Repo root
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0  # Pin to match your local version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -upgrade

      - name: Terraform Format & Validate
        run: |
          terraform fmt -check -recursive
          terraform validate

      - name: Terraform Plan
        if: github.event_name == 'pull_request' || inputs.action == 'plan'
        run: terraform plan -var-file=envs/${{ github.event.inputs.environment || 'dev' }}.tfvars -out=plan.tfplan
        env:
          TF_VAR_environment: ${{ github.event.inputs.environment || 'dev' }}

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && inputs.action == 'apply'
        run: terraform apply -auto-approve plan.tfplan

      - name: Terraform Destroy
        if: inputs.action == 'destroy'
        run: terraform apply -destroy -auto-approve -var-file=envs/${{ github.event.inputs.environment || 'dev' }}.tfvars